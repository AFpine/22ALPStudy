 private void OperatorButton_Click(object sender, RoutedEventArgs e)
        {

            Button currentButton = (Button)sender;

            if (double.TryParse(resultLabel.Content.ToString(), out lastNumber))
            {
                resLabel.Content = $"{lastNumber}{" "}{currentButton.Content}";
            }
            if (sender == additionButton)
                selectedOperator = SelectedOperator.Addition;
            if (sender == subButton)
                selectedOperator = SelectedOperator.Subtraction;
            if (sender == multiplicationButton)
                selectedOperator = SelectedOperator.Multiplication;
            if (sender == slashButton)
                selectedOperator = SelectedOperator.Division;

            double newNumber;
            double result = 0;

           if (double.TryParse(resultLabel.Content.ToString(), out newNumber))
            {
               while (1)
                {
                    switch (selectedOperator)
                    {
                        case SelectedOperator.Addition:
                            result = SimpleMath.Add(lastNumber, newNumber);
                            resultHistory.Items.Insert(0, $"{lastNumber}{" "}{additionButton.Content}{" "}{resultLabel.Content}{" = "}{result}");
                            resLabel.Content = $"{result}{" "}{additionButton.Content}";
                            break;
                        case SelectedOperator.Subtraction:
                            result = SimpleMath.Sub(lastNumber, newNumber);
                            resultHistory.Items.Insert(0, $"{lastNumber}{" "}{subButton.Content}{" "}{resultLabel.Content}{" = "}{result}");
                            resLabel.Content = $"{result}{" "}{subButton.Content}";
                            break;
                        case SelectedOperator.Multiplication:
                            result = SimpleMath.Mul(lastNumber, newNumber);
                            resultHistory.Items.Insert(0, $"{lastNumber}{" "}{multiplicationButton.Content}{" "}{resultLabel.Content}{" = "}{result}");
                            resLabel.Content = $"{result}{" "}{multiplicationButton.Content}";
                            break;
                        case SelectedOperator.Division:
                            result = SimpleMath.Div(lastNumber, newNumber);
                            resultHistory.Items.Insert(0, $"{lastNumber}{" "}{slashButton.Content}{" "}{resultLabel.Content}{" = "}{result}");
                            resLabel.Content = $"{result}{" "}{slashButton.Content}";
                            break;
                    }
                    resultLabel.Content = result.ToString();
                }
                
            }
                
           
        }